ggplot(viro_quant.long_rep5, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) + # Add points for clarity
# scale_y_log10() +
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple"), labels =c("Uninfected spores", "Free phage", "Virospores")) +  # Custom colors
labs(title = "Virospores, Free phage, and uninfected spores vs Distance",
x = "Distance from PFU (cm)", y = "Virospores, Free phage , uninfected spores per cm^2",
color = "Measurement")
View(viro_quant.long_rep5)
# Okay plots have not been accurate
# Convert data to long format
viro_quant.long_rep5 <- viro_quant.new %>%
pivot_longer(cols = c(VPFU, Free_PFU_5rep, Spores_CFU_5rep),
names_to = "variable",
values_to = "value") #%>%
# mutate(value = log(value))
# Log transform the data
# Plot
ggplot(viro_quant.long_rep5, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) + # Add points for clarity
# scale_y_log10() +
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple"), labels =c("Uninfected spores", "Free phage", "Virospores")) +  # Custom colors
labs(title = "Virospores, Free phage, and uninfected spores vs Distance",
x = "Distance from PFU (cm)", y = "Virospores, Free phage , uninfected spores per cm^2",
color = "Measurement")
# Okay plots have not been accurate
# Convert data to long format
viro_quant.long_rep5 <- viro_quant.new %>%
pivot_longer(cols = c(VPFU, Free_PFU_5rep, Spores_CFU_5rep),
names_to = "variable",
values_to = "value") #%>%
# mutate(value = log(value))
# Log transform the data
# Plot
ggplot(viro_quant.long_rep5, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) + # Add points for clarity
scale_y_log10() +
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple"), labels =c("Uninfected spores", "Free phage", "Virospores")) +  # Custom colors
labs(title = "Virospores, Free phage, and uninfected spores vs Distance",
x = "Distance from PFU (cm)", y = "Virospores, Free phage , uninfected spores per cm^2",
color = "Measurement")
View(viro_quant.new)
View(viro_quant.long_rep5)
# order of op--
# divide the number of PFU by 0.00785 and multiply that product by the dilution factor
# create a new column with this data and call this column
# Free phage
viro_quant$Free_PFU_3rep <- (viro_quant$Free_PFU_10e3 * 10^3) / 0.00785
viro_quant$Free_PFU_5rep <- (viro_quant$Free_PFU_10e5 * 10^5) / 0.00785
viro_quant$Free_PFU_7rep <- (viro_quant$Free_PFU_10e7 * 10^7) / 0.00785
# Uninfected spores
viro_quant$Spores_CFU_3rep <- (viro_quant$Spores_CFU_10e3 * 10^3) / 0.00785
viro_quant$Spores_CFU_5rep <- (viro_quant$Spores_CFU_10e5 * 10^5) / 0.00785
viro_quant$Spores_CFU_7rep <- (viro_quant$Spores_CFU_10e7 * 10^7) / 0.00785
# Total spores
viro_quant$total_spores_3rep <-(viro_quant$VPFU + viro_quant$Spores_CFU_10e3)
viro_quant$total_spores_5rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e5)
viro_quant$total_spores_7rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e7)
View(viro_quant)
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU", "Distance_from_PFU_center_cm", "Free_PFU_7rep", "Free_PFU_3rep", "Free_PFU_5rep", "Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep", "total_spores_3rep", "total_spores_5rep", "total_spores_7rep")]
# Average the diluted replicate samples
viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3rep", "Free_PFU_5rep", "Free_PFU_7rep")], na.rm = TRUE)
viro_quant.new$Spores_CFU_Avg <- rowMeans(viro_quant.new[, c("Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep")], na.rm = TRUE)
View(viro_quant.new)
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU", "Distance_from_PFU_center_cm", "Free_PFU_7rep", "Free_PFU_3rep", "Free_PFU_5rep", "Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep", "total_spores_3rep", "total_spores_5rep", "total_spores_7rep")]
# Average the diluted replicate samples
viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3rep", "Free_PFU_5rep", "Free_PFU_7rep")], na.rm = TRUE)
viro_quant.new$Spores_CFU_Avg <- rowMeans(viro_quant.new[, c("Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep")], na.rm = TRUE)
# Average the total spores count
viro_quant.new$total_spores_Avg <- rowMeans(viro_quant.new[, c("total_spores_3rep", "total_spores_5rep", "total_spores_7rep")], na.rm = TRUE)
View(viro_quant.new)
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
View(viro_quant.long_rep5)
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU, Free_PFU_Avg, Spores_CFU_Avg, total_spores_Avg ),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Set x-axis limits to ensure shading is within range
xlim(min(region_shading$xmin), max(region_shading$xmax)) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple"),
labels = c("Uninfected spores", "Free phage", "Virospores")) +
# Labels and theme
labs(title = "Virospores, Free Phage, and Uninfected Spores vs Distance",
x = "Distance from PFU (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU, Free_PFU_Avg, Spores_CFU_Avg, total_spores_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) + # Add points for clarity
geom_rect(data = region_shading,
aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill = Region),
alpha = 0.3) +
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +  # Custom colors
theme_minimal() +
labs(title = "Shaded Regions on Plot", x = "X-axis", y = "Value")
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) + # Add points for clarity
geom_rect(data = region_shading,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +  # Custom colors
theme_minimal() +
labs(title = "Shaded Regions on Plot", x = "X-axis", y = "Value")
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Set x-axis limits to ensure shading is within range
xlim(min(region_shading$xmin), max(region_shading$xmax)) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple"),
labels = c("Uninfected spores", "Free phage", "Virospores")) +
# Labels and theme
labs(title = "Virospores, Free Phage, and Uninfected Spores vs Distance",
x = "Distance from PFU (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Set x-axis limits to ensure shading is within range
xlim(min(region_shading$xmin), max(region_shading$xmax)) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple"),
labels = c("Uninfected spores", "Free phage", "Virospores")) +
# Labels and theme
labs(title = "Virospores, Free Phage, and Uninfected Spores vs Distance",
x = "Distance from PFU (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
View(viro_quant.long)
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU", "Distance_from_PFU_center_cm", "Free_PFU_7rep", "Free_PFU_3rep", "Free_PFU_5rep", "Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep", "total_spores_3rep", "total_spores_5rep", "total_spores_7rep")]
# Average the diluted replicate samples
viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3rep", "Free_PFU_5rep", "Free_PFU_7rep")], na.rm = TRUE)
viro_quant.new$Spores_CFU_Avg <- rowMeans(viro_quant.new[, c("Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep")], na.rm = TRUE)
# Average the total spores count
viro_quant.new$total_spores_Avg <- rowMeans(viro_quant.new[, c("total_spores_3rep", "total_spores_5rep", "total_spores_7rep")], na.rm = TRUE)
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU, Free_PFU_Avg, Spores_CFU_Avg, total_spores_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
View(viro_quant.long)
View(viro_quant.new)
View(viro_quant.new)
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
#scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
View(viro_quant.long)
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU, Free_PFU_Avg, Spores_CFU_Avg, total_spores_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
View(viro_quant.long)
View(viro_quant.new)
# order of op--
# divide the number of PFU by 0.00785 and multiply that product by the dilution factor
# create a new column with this data and call this column
# Free phage
viro_quant$Free_PFU_3rep <- (viro_quant$Free_PFU_10e3 * 10^3) / 0.00785
viro_quant$Free_PFU_5rep <- (viro_quant$Free_PFU_10e5 * 10^5) / 0.00785
viro_quant$Free_PFU_7rep <- (viro_quant$Free_PFU_10e7 * 10^7) / 0.00785
# Uninfected spores
viro_quant$Spores_CFU_3rep <- (viro_quant$Spores_CFU_10e3 * 10^3) / 0.00785
viro_quant$Spores_CFU_5rep <- (viro_quant$Spores_CFU_10e5 * 10^5) / 0.00785
viro_quant$Spores_CFU_7rep <- (viro_quant$Spores_CFU_10e7 * 10^7) / 0.00785
# Total spores
viro_quant$total_spores_3rep <-(viro_quant$VPFU + viro_quant$Spores_CFU_10e3)
viro_quant$total_spores_5rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e5)
viro_quant$total_spores_7rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e7)
View(viro_quant)
# Work on adding the regions for shading
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Custom colors for line and point data
scale_color_manual(values = c("coral", "cyan", "purple", "black"),
labels = c("Uninfected spores", "Free phage", "Virospores", "Total spores")) +
# Labels and theme
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
setwd("~/GitHub/VirosporeQuant/Magalie_virospore_quant")
# Load Library
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Read in data
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250317_virospore_multiquant_magalie.xlsx", sheet = "raw_data")
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
# order of op--
# divide the number of PFU by 0.00785 and multiply that product by the dilution factor
# create a new column with this data and call this column
# Free phage
viro_quant$Free_PFU_3rep <- (viro_quant$Free_PFU_10e3 * 10^3) / 0.00785
#viro_quant$Free_PFU_5rep <- (viro_quant$Free_PFU_10e5 * 10^5) / 0.00785
#viro_quant$Free_PFU_7rep <- (viro_quant$Free_PFU_10e7 * 10^7) / 0.00785
# Uninfected spores
viro_quant$Spores_CFU_3rep <- (viro_quant$Spores_CFU_10e3 * 10^3) / 0.00785
viro_quant$Spores_CFU_5rep <- (viro_quant$Spores_CFU_10e5 * 10^5) / 0.00785
viro_quant$Spores_CFU_7rep <- (viro_quant$Spores_CFU_10e7 * 10^7) / 0.00785
# Total spores
viro_quant$total_spores_3rep <-(viro_quant$VPFU + viro_quant$Spores_CFU_10e3)
viro_quant$total_spores_5rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e5)
viro_quant$total_spores_7rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e7)
setwd("~/GitHub/VirosporeQuant/Magalie_virospore_quant")
# Load Library
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Read in data
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250317_virospore_multiquant_magalie.xlsx", sheet = "raw_data")
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
# order of op--
# divide the number of PFU by 0.00785 and multiply that product by the dilution factor
# create a new column with this data and call this column
# Free phage
viro_quant$Free_PFU_3rep <- (viro_quant$Free_PFU_10e3 * 10^3) / 0.00785
#viro_quant$Free_PFU_5rep <- (viro_quant$Free_PFU_10e5 * 10^5) / 0.00785
#viro_quant$Free_PFU_7rep <- (viro_quant$Free_PFU_10e7 * 10^7) / 0.00785
# Uninfected spores
viro_quant$Spores_CFU_3rep <- (viro_quant$Spores_CFU_10e3 * 10^3) / 0.00785
viro_quant$Spores_CFU_5rep <- (viro_quant$Spores_CFU_10e5 * 10^5) / 0.00785
viro_quant$Spores_CFU_7rep <- (viro_quant$Spores_CFU_10e7 * 10^7) / 0.00785
# Total spores
viro_quant$total_spores_3rep <-(viro_quant$VPFU + viro_quant$Spores_CFU_10e3)
viro_quant$total_spores_5rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e5)
viro_quant$total_spores_7rep <- (viro_quant$VPFU + viro_quant$Spores_CFU_10e7)
View(viro_quant)
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU", "Distance_from_PFU_center_cm", "Free_PFU_3rep", "Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep", "total_spores_3rep", "total_spores_5rep", "total_spores_7rep")]
# Average the diluted replicate samples
viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3rep", "Free_PFU_5rep", "Free_PFU_7rep")], na.rm = TRUE)
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU", "Distance_from_PFU_center_cm", "Free_PFU_3rep", "Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep", "total_spores_3rep", "total_spores_5rep", "total_spores_7rep")]
# Average the diluted replicate samples
#viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3rep", "Free_PFU_5rep", "Free_PFU_7rep")], na.rm = TRUE)
viro_quant.new$Spores_CFU_Avg <- rowMeans(viro_quant.new[, c("Spores_CFU_3rep", "Spores_CFU_5rep", "Spores_CFU_7rep")], na.rm = TRUE)
# Average the total spores count
viro_quant.new$total_spores_Avg <- rowMeans(viro_quant.new[, c("total_spores_3rep", "total_spores_5rep", "total_spores_7rep")], na.rm = TRUE)
View(viro_quant.new)
View(viro_quant.new)
View(viro_quant)
View(viro_quant)
View(viro_quant)
