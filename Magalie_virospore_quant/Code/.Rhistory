# Load Library
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Read in data
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250317_virospore_multiquant_magalie.xlsx", sheet = "raw_data")
View(viro_quant)
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
# Calculate CFU and PFU of the original suspension which is # of PFU or CFU / vol plated x total dilution factor
viro_quant$Free_PFU_mL_3rep <- viro_quant$Free_PFU_10e3 / (0.1 * (10^3))
setwd("~/GitHub/VirosporeQuant/Magalie_virospore_quant")
# Load Library
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Read in data
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250317_virospore_multiquant_magalie.xlsx", sheet = "raw_data")
# Calculate CFU and PFU of the original suspension which is # of PFU or CFU / vol plated x total dilution factor
viro_quant$Free_PFU_mL_3rep <- viro_quant$Free_PFU_10e3 / (0.1 * (10^3))
View(viro_quant)
# Calculate CFU and PFU of the original suspension which is # of PFU or CFU / vol plated x total dilution factor
viro_quant$Free_PFU_mL_3rep <- viro_quant$Free_PFU_10e3 / (0.1 * (10^-3))
View(viro_quant)
# Calculate CFU and PFU of the original suspension which is # of PFU or CFU / vol plated x total dilution factor
viro_quant$Free_PFU_mL_3rep <- viro_quant$Free_PFU_10e3 / (0.1 * (10^-3))
viro_quant$Free_PFU_mL_5rep <- viro_quant$Free_PFU_10e5 / (0.1 * (10^-5))
viro_quant$Free_PFU_mL_7rep <- viro_quant$Free_PFU_10e7 / (0.1 * (10^-7))
# Uninfected spores
viro_quant$Spores_PFU_mL_3rep <- viro_quant$Spores_CFU_10e3 / (0.1 * (10^-3))
# Calculate CFU and PFU of the original suspension which is # of PFU or CFU / vol plated x total dilution factor
viro_quant$Free_PFU_mL_3rep <- viro_quant$Free_PFU_10e3 / (0.1 * (10^-3))
viro_quant$Free_PFU_mL_5rep <- viro_quant$Free_PFU_10e5 / (0.1 * (10^-5))
viro_quant$Free_PFU_mL_7rep <- viro_quant$Free_PFU_10e7 / (0.1 * (10^-7))
# Uninfected spores
viro_quant$Spores_PFU_mL_3rep <- viro_quant$Spores_CFU_10e3 / (0.1 * (10^-3))
viro_quant$Spores_PFU_mL_5rep <- viro_quant$Spores_CFU_10e5 / (0.1 * (10^-5))
viro_quant$Spores_PFU_mL_7rep <- viro_quant$Spores_CFU_10e7 / (0.1 * (10^-7))
View(viro_quant)
View(viro_quant)
viro_quant$VPFU <- viro_quant$VPFU / (0.25
viro_quant$VPFU <- viro_quant$VPFU / (0.25)
View(viro_quant)
# Since the dilution factor is 1 (10^0) we just really need to account for the volume plated
viro_quant$VPFU <- viro_quant$VPFU / (0.25) # accounting for volume plated 250 ul
# Since the dilution factor is 1 (10^0) we just really need to account for the volume plated
viro_quant$VPFU <- viro_quant$VPFU / (0.25) # accounting for volume plated 250 ul
# And then calculate for the final amount of vpfu in the stock (1.5ml)
viro_quant$VPFU_stock <- viro_quant$VPFU * 1.5
View(viro_quant)
# Since the dilution factor is 1 (10^0) we just really need to account for the volume plated
viro_quant$VPFU <- viro_quant$VPFU / (0.25) # accounting for volume plated 250 ul
# And then calculate for the final amount of vpfu in the stock (1.5ml)
viro_quant$VPFU_stock <- viro_quant$VPFU * 1.5
# And then finally take into account the area sampled
viro_quant$VPFU_cm2 <- viro_quant$VPFU / (0.00785)
View(viro_quant)
viro_quant$Free_PFU_3stock <- viro_quant$Free_PFU_mL_3rep * 1.5
#
View(viro_quant)
viro_quant$Free_PFU_3stock <- viro_quant$Free_PFU_mL_3rep * 1.5
viro_quant$Free_PFU_5stock <- viro_quant$Free_PFU_mL_5rep * 1.5
viro_quant$Free_PFU_7stock <- viro_quant$Free_PFU_mL_7rep * 1.5
#
View(viro_quant)
setwd("~/GitHub/VirosporeQuant/Magalie_virospore_quant")
# Load Library
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Read in data
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250317_virospore_multiquant_magalie.xlsx", sheet = "raw_data")
# Calculate CFU and PFU of the original suspension which is # of PFU or CFU / vol plated x total dilution factor
viro_quant$Free_PFU_mL_3rep <- viro_quant$Free_PFU_10e3 / (0.1 * (10^-3))
viro_quant$Free_PFU_mL_5rep <- viro_quant$Free_PFU_10e5 / (0.1 * (10^-5))
viro_quant$Free_PFU_mL_7rep <- viro_quant$Free_PFU_10e7 / (0.1 * (10^-7))
# Uninfected spores
viro_quant$Spores_CFU_mL_3rep <- viro_quant$Spores_CFU_10e3 / (0.1 * (10^-3))
viro_quant$Spores_CFU_mL_5rep <- viro_quant$Spores_CFU_10e5 / (0.1 * (10^-5))
viro_quant$Spores_CFU_mL_7rep <- viro_quant$Spores_CFU_10e7 / (0.1 * (10^-7))
viro_quant$Free_PFU_3stock <- viro_quant$Free_PFU_mL_3rep * 1.5
viro_quant$Free_PFU_5stock <- viro_quant$Free_PFU_mL_5rep * 1.5
viro_quant$Free_PFU_7stock <- viro_quant$Free_PFU_mL_7rep * 1.5
viro_quant$Spores_CFU_3stock <- viro_quant$Spores_CFU_mL_3rep * 1.5
viro_quant$Spores_CFU_5stock <- viro_quant$Spores_CFU_mL_5rep * 1.5
viro_quant$Spores_CFU_7stock <- viro_quant$Spores_CFU_mL_7rep * 1.5
View(viro_quant)
viro_quant$Free_PFU_3stock <- viro_quant$Free_PFU_mL_3rep * 1.5
viro_quant$Free_PFU_5stock <- viro_quant$Free_PFU_mL_5rep * 1.5
viro_quant$Free_PFU_7stock <- viro_quant$Free_PFU_mL_7rep * 1.5
viro_quant$Spores_CFU_3stock <- viro_quant$Spores_CFU_mL_3rep * 1.5
viro_quant$Spores_CFU_5stock <- viro_quant$Spores_CFU_mL_5rep * 1.5
viro_quant$Spores_CFU_7stock <- viro_quant$Spores_CFU_mL_7rep * 1.5
# Calculate per area
viro_quant$Free_PFU_3_cm2 <- viro_quant$Free_PFU_3stock / (0.00785)
View(viro_quant)
viro_quant$Free_PFU_3stock <- viro_quant$Free_PFU_mL_3rep * 1.5
viro_quant$Free_PFU_5stock <- viro_quant$Free_PFU_mL_5rep * 1.5
viro_quant$Free_PFU_7stock <- viro_quant$Free_PFU_mL_7rep * 1.5
viro_quant$Spores_CFU_3stock <- viro_quant$Spores_CFU_mL_3rep * 1.5
viro_quant$Spores_CFU_5stock <- viro_quant$Spores_CFU_mL_5rep * 1.5
viro_quant$Spores_CFU_7stock <- viro_quant$Spores_CFU_mL_7rep * 1.5
# Calculate per area
viro_quant$Free_PFU_3_cm2 <- viro_quant$Free_PFU_3stock / (0.00785)
viro_quant$Free_PFU_5_cm2 <- viro_quant$Free_PFU_5stock / (0.00785)
viro_quant$Free_PFU_7_cm2 <- viro_quant$Free_PFU_7stock / (0.00785)
viro_quant$Free_PFU_3stock <- viro_quant$Free_PFU_mL_3rep * 1.5
viro_quant$Free_PFU_5stock <- viro_quant$Free_PFU_mL_5rep * 1.5
viro_quant$Free_PFU_7stock <- viro_quant$Free_PFU_mL_7rep * 1.5
viro_quant$Spores_CFU_3stock <- viro_quant$Spores_CFU_mL_3rep * 1.5
viro_quant$Spores_CFU_5stock <- viro_quant$Spores_CFU_mL_5rep * 1.5
viro_quant$Spores_CFU_7stock <- viro_quant$Spores_CFU_mL_7rep * 1.5
# Calculate per area for free phage
viro_quant$Free_PFU_3_cm2 <- viro_quant$Free_PFU_3stock / (0.00785)
viro_quant$Free_PFU_5_cm2 <- viro_quant$Free_PFU_5stock / (0.00785)
viro_quant$Free_PFU_7_cm2 <- viro_quant$Free_PFU_7stock / (0.00785)
# For free spores
viro_quant$Spores_CFU_3_cm2 <- viro_quant$Spores_CFU_3stock / (0.00785)
viro_quant$Spores_CFU_5_cm2 <- viro_quant$Spores_CFU_5stock / (0.00785)
viro_quant$Spores_CFU_7_cm2 <- viro_quant$Spores_CFU_7stock / (0.00785)
View(viro_quant)
```{r}
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU_cm2", "Distance_from_PFU_center_cm", "Free_PFU_3_cm2","Free_PFU_5_cm2", "Free_PFU_7_cm2", "Spores_CFU_3_cm2", "Spores_CFU_5_cm2", "Spores_CFU_7_cm2")] #"total_spores_3rep", #"total_spores_5rep", #"total_spores_7rep
# Since the dilution factor is 1 (10^0) we just really need to account for the volume plated
viro_quant$VPFU <- viro_quant$VPFU / (0.25) # accounting for volume plated 250 ul
# And then calculate for the final amount of vpfu in the stock (1.5ml)
viro_quant$VPFU_stock <- viro_quant$VPFU * 1.5
# And then finally take into account the area sampled
viro_quant$VPFU_cm2 <- viro_quant$VPFU / (0.00785)
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU_cm2", "Distance_from_PFU_center_cm", "Free_PFU_3_cm2","Free_PFU_5_cm2", "Free_PFU_7_cm2", "Spores_CFU_3_cm2", "Spores_CFU_5_cm2", "Spores_CFU_7_cm2")] #"total_spores_3rep", #"total_spores_5rep", #"total_spores_7rep
# Average the diluted replicate samples
viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3_cm2", "Free_PFU_5_cm2", "Free_PFU_7_cm2")], na.rm = TRUE)
viro_quant.new$Spores_CFU_Avg <- rowMeans(viro_quant.new[, c("Spores_CFU_3_cm2", "Spores_CFU_5_cm2", "Spores_CFU_7_cm2")], na.rm = TRUE)
# Average the total spores count
#viro_quant.new$total_spores_Avg <- rowMeans(viro_quant.new[, c("total_spores_3rep", "total_spores_5rep", "total_spores_7rep")], na.rm = TRUE)
View(viro_quant.new)
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
View(viro_quant.long)
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
Plot Average PFU and CFU and virospores
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
# Plotting new data
# Work on adding the regions for shading
#region_shading <- data.frame(
#Region = c("Center", "Annulus", "Lawn"),
#xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
#xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
#)
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
# Plotting new data
# Work on adding the regions for shading
#region_shading <- data.frame(
#Region = c("Center", "Annulus", "Lawn"),
#xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
#xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
#)
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
#scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value))
# Log transform the data
# Plotting new data
# Work on adding the regions for shading
#region_shading <- data.frame(
#Region = c("Center", "Annulus", "Lawn"),
#xmin = c(0, 0.1, 0.2),   # Starting x-value for each region
#xmax = c(0.1, 0.2, 0.4)  # Ending x-value for each region
#)
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
viro_quant.long.all <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_3_cm2, Free_PFU_5_cm2, Free_PFU_7_cm2, Free_PFU_Avg, Spores_CFU_3_cm2, Spores_CFU_5_cm2, Spores_CFU_7_cm2, Spores_CFU_Avg),
names_to = "variable",
values_to = "value")
viro_quant.long.all <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_3_cm2, Free_PFU_5_cm2, Free_PFU_7_cm2, Free_PFU_Avg, Spores_CFU_3_cm2, Spores_CFU_5_cm2, Spores_CFU_7_cm2, Spores_CFU_Avg),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long.all, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value)) # for log transforming data
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
mutate(value = log(value)) # for log transforming data
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") %>%
mutate(value = log(value)) # for log transforming data
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
#scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value)) # for log transforming data
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
View(viro_quant)
View(viro_quant)
View(viro_quant)
# New data frame
viro_quant.new <- viro_quant[, c("Plaque", "Sample", "Region", "VPFU_cm2", "Distance_from_PFU_center_cm", "Free_PFU_3_cm2","Free_PFU_5_cm2", "Free_PFU_7_cm2", "Spores_CFU_3_cm2", "Spores_CFU_5_cm2", "Spores_CFU_7_cm2")] #"total_spores_3rep", #"total_spores_5rep", #"total_spores_7rep
# Average the diluted replicate samples
viro_quant.new$Free_PFU_Avg <- rowMeans(viro_quant.new[, c("Free_PFU_3_cm2", "Free_PFU_5_cm2", "Free_PFU_7_cm2")], na.rm = TRUE)
viro_quant.new$Spores_CFU_Avg <- rowMeans(viro_quant.new[, c("Spores_CFU_3_cm2", "Spores_CFU_5_cm2", "Spores_CFU_7_cm2")], na.rm = TRUE)
# Calculate total spores with VPFU and the averages
viro_quant.new$Spores_total <- viro_quant.new$Spores_CFU_Avg + viro_quant.new$VPFU_cm2
# Average the total spores count
#viro_quant.new$total_spores_Avg <- rowMeans(viro_quant.new[, c("total_spores_3rep", "total_spores_5rep", "total_spores_7rep")], na.rm = TRUE)
View(viro_quant.new)
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg, Spores_total),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value)) # for log transforming data
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_total),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value)) # for log transforming data
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
# Convert data to long format
viro_quant.long <- viro_quant.new %>%
pivot_longer(cols = c(VPFU_cm2, Free_PFU_Avg, Spores_CFU_Avg),
names_to = "variable",
values_to = "value") #%>%
#mutate(value = log(value)) # for log transforming data
region_shading <- data.frame(
Region = c("Center", "Annulus", "Lawn"),
xmin = c(0, 0.05, 0.1),   # Starting x-value for each region
xmax = c(0.05, 0.1, 0.2)  # Ending x-value for each region
)
region_shading$Region <- factor(region_shading$Region, levels = c("Center", "Annulus", "Lawn"))
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_center_cm, y = value, color = variable, group = variable)) +
# Add shaded regions using geom_rect()
geom_rect(data = region_shading, inherit.aes = FALSE,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = Region),
alpha = 0.3) +
# Line and point layers
geom_line(linewidth = 1.2) +
geom_point(aes(color = variable), size = 2) +
# Custom fill colors for shaded regions
scale_fill_manual(values = c("Center" = "lightblue", "Annulus" = "lightgreen", "Lawn" = "lightpink")) +
# Log transformation for y-axis
scale_y_log10() +
# Labels
labs(title = "Virospore Multi-Quant Plot Plaque A",
x = "Distance from PFU center (cm)",
y = "Virospores, Free Phage, Uninfected Spores per cm^2",
color = "Measurement") +
theme_minimal()
