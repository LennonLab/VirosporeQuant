viro_quant$VPFU <- viro_quant$VPFU / 0.00785
viro_quant$Free_PFU <- ifelse(is.na(viro_quant$Free_PFU), NA, viro_quant$Free_PFU / 0.00785)
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), NA, viro_quant$Free_PFU / 0.00785)
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785)
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
View(viro_quant)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Things to do: create project for this, fork the Magalie repo and add to it,
# Read data into
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250311_annulus_multiquant_pilot.xlsx", sheet = "mutliquant_pilot")
viro_quant$Distance_from_PFU_cm <- factor(viro_quant$Distance_from_PFU_cm)
# Boxplot of recovered VPFU by distance from PFU for fun
ggplot(viro_quant, aes(x = Distance_from_PFU_cm, y = VPFU, fill = Region)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Recovered VPFU by Distance from PFU", x = "Distance from PFU", y = "Recovered VPFU") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
na.omit(viro_quant)
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
View(viro_quant)
View(viro_quant)
str(viro_quant$Free_PFU)
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_quant$Free_PFU <- as.numeric(viro_quant$Free_PFU) / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
#viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Things to do: create project for this, fork the Magalie repo and add to it,
# Read data into
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250311_annulus_multiquant_pilot.xlsx", sheet = "mutliquant_pilot")
viro_quant$Distance_from_PFU_cm <- factor(viro_quant$Distance_from_PFU_cm)
# Boxplot of recovered VPFU by distance from PFU for fun
ggplot(viro_quant, aes(x = Distance_from_PFU_cm, y = VPFU, fill = Region)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Recovered VPFU by Distance from PFU", x = "Distance from PFU", y = "Recovered VPFU") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Normalize the data to the area before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_quant$Free_PFU <- as.numeric(viro_quant$Free_PFU) / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
#viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
library(ggplot2)
library(dplyr)
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_normalize <- viro_quant$VPFU <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_normalize <- as.numeric(viro_quant$Free_PFU) / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
#viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_normalize <- viro_quant$CFU / 0.00785
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Things to do: create project for this, fork the Magalie repo and add to it,
# Read data into
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250311_annulus_multiquant_pilot.xlsx", sheet = "mutliquant_pilot")
viro_quant$Distance_from_PFU_cm <- factor(viro_quant$Distance_from_PFU_cm)
# Boxplot of recovered VPFU by distance from PFU for fun
ggplot(viro_quant, aes(x = Distance_from_PFU_cm, y = VPFU, fill = Region)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Recovered VPFU by Distance from PFU", x = "Distance from PFU", y = "Recovered VPFU") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_normalize <- viro_quant$VPFU <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_normalize <- as.numeric(viro_quant$Free_PFU) / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
#viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_normalize <- viro_quant$CFU / 0.00785
library(ggplot2)
library(dplyr)
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_normalize <- viro_quant$VPFU <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_normalize <- as.numeric(viro_quant$Free_PFU) / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
#viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_normalize <- viro_quant$CFU / 0.00785
viro.df <- as.data.frame(viro_normalize)
View(viro.df)
View(viro_quant)
library(ggplot2)
library(dplyr)
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_normalize <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_normalize <- as.numeric(viro_quant$Free_PFU) / 0.00785
#viro_quant$Free_PFU <- ifelse(!is.na(viro_quant$Free_PFU), viro_quant$Free_PFU / 0.00785, NA)
#viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_normalize <- viro_quant$CFU / 0.00785
viro.df <- as.data.frame(viro_normalize)
View(viro.df)
View(viro_quant)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(tidyr)
library(vegan)
library(ggplot2)
library(mgcv)
# Things to do: create project for this, fork the Magalie repo and add to it,
# Read data into
viro_quant <- read_excel("~/GitHub/VirosporeQuant/Magalie_virospore_quant/Data/Annulus_Quant/20250311_annulus_multiquant_pilot.xlsx", sheet = "mutliquant_pilot")
viro_quant$Distance_from_PFU_cm <- factor(viro_quant$Distance_from_PFU_cm)
# Boxplot of recovered VPFU by distance from PFU for fun
ggplot(viro_quant, aes(x = Distance_from_PFU_cm, y = VPFU, fill = Region)) +
geom_boxplot(alpha = 0.7) +
labs(title = "Recovered VPFU by Distance from PFU", x = "Distance from PFU", y = "Recovered VPFU") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Normalize the data to the area of the pipette tip (in cm) before calculating summary statistics (VPFU)
viro_quant$VPFU <- viro_quant$VPFU / 0.00785
str(viro_quant$Free_PFU)  # Should be "num"
viro_quant$Free_PFU <- as.numeric(viro_quant$Free_PFU)
viro_quant$Free_PFU <- viro_quant$Free_PFU / 0.00785
viro_quant$CFU <- viro_quant$CFU / 0.00785
View(viro_quant)
View(viro.df)
View(viro_quant)
View(viro_quant)
View(viro_quant)
View(viro_quant)
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant.long %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(size = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
facet_wrap(~ region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray", alpha = 0.2))  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
facet_wrap(~ region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray", alpha = 0.2))  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
facet_wrap(~ region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray")  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
facet_wrap(~ region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray"))  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray"))  # Light gray shading
View(viro_quant.long)
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray"))  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray"))  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme(panel.background = element_rect(fill = "lightgray"))  # Light gray shading
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme()
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement") +
theme()
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
scale_y_continuous() +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
theme_minimal() +
scale_y_continuous(limits = c(0, NA)) +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
scale_y_continuous(limits = c(0, NA)) +
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_smooth(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
#geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "Value",
color = "Measurement")
# Let's plot
# Convert data to long format
viro_quant.long <- viro_quant %>%
pivot_longer(cols = c(VPFU, Free_PFU, CFU),
names_to = "variable",
values_to = "value")
# Plot
ggplot(viro_quant.long, aes(x = Distance_from_PFU_cm, y = value, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +  # Line plot
geom_point(size = 2) +  # Add points for clarity
#facet_wrap(~ Region) +  # Facet by region
scale_color_manual(values = c("coral", "cyan", "purple")) +  # Custom colors
labs(title = "VPFU, Free_PFU, and CFU vs Distance",
x = "Distance from PFU", y = "VPFU, Free PFU, CFU per cm^2",
color = "Measurement")
